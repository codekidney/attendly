{"version":3,"sources":["components/meeting/meetingList.component.js","components/meeting/meetingForm.component.js","components/meeting/meetingFilter.component.js","components/meeting/meetingSortBy.component.js","components/loading/loading.component.js","serviceWorker.js","index.js","components/header/header.component.js","routes/meeting/meeting.container.js","routes/home/home.container.js"],"names":["MeetingList","props","useState","toggledRow","setToggledRow","items","Table","striped","bordered","hover","className","onClick","handleSortBy","style","width","map","item","index","key","id","title","Button","variant","size","value","description","startDate","date","time","endDate","handleDeleteMeeting","defaultProps","MeetingForm","validated","setValidated","setStartDate","setEndDate","startTime","setStartTime","endTime","setEndTime","parseDate","str","format","locale","parsed","dateFnsParse","Date","DateUtils","isDate","formatDate","dateFnsFormat","to","Form","onSubmit","event","form","currentTarget","newStartDateTime","setHours","getHours","getMinutes","getMilliseconds","checkValidity","preventDefault","stopPropagation","meeting","shortid","generate","elements","localStorage","getItem","setItem","JSON","stringify","meetings_LS","meetings","parse","push","autoComplete","Group","controlId","Label","Control","required","minLength","maxLength","type","placeholder","as","rows","InputGroup","onDayChange","day","selected","disabled","dayPickerProps","localeUtils","MomentLocaleUtils","allowEmpty","showSecond","onChange","Alert","dayPickerInput","MeetingFilter","handleFilterDates","Prepend","Text","name","defaultValue","handleDisableFilter","MeetingSortBy","ddToggleName","setDdToggleName","Dropdown","onSelect","Toggle","Menu","Item","e","target","innerHTML","eventKey","Loading","Boolean","window","location","hostname","match","ReactDOM","render","Container","Navbar","expand","bg","Brand","href","aria-controls","Collapse","Nav","process","Row","Col","path","component","ready","setReady","setMeetings","getInitialData","meetingArr","fetch","then","response","json","data","forEach","newMeeting","__getPropByString","obj","propString","split","i","iLen","length","candidate","undefined","__sort","arr","propStr","sort","i1","i2","a","b","onSortBy","sorted","reverse","console","log","useEffect","initialData","filter","filtered","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"kRAKMA,EAAc,SAACC,GAAW,IAAD,EACSC,oBAAS,GADlB,mBACpBC,EADoB,KACRC,EADQ,KAG3B,OAASH,EAAMI,MAGX,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,UAAU,eACpC,+BACI,4BACI,iCACA,wBAAIC,QAAS,kBAAMV,EAAMW,aAAa,cAAcC,MAAO,CAACC,MAAM,QAAlE,cACA,wBAAIH,QAAS,kBAAMV,EAAMW,aAAa,kBAAkBC,MAAO,CAACC,MAAM,QAAtE,SACA,wBAAIH,QAAS,kBAAMV,EAAMW,aAAa,gBAAgBC,MAAO,CAACC,MAAM,QAApE,UACA,uCAGR,+BACCb,EAAMI,MAAMU,KAAK,SAACC,EAAMC,GACzB,OACI,wBAAIC,IAAKF,EAAKG,IACV,4BAAKF,EAAM,GACX,4BACKd,IAAea,EAAKG,GACjB,6BACI,yBAAKT,UAAU,kCACVM,EAAKI,MACN,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAAUC,MAAOR,EAAKG,GAAIR,QAAS,kBAAMP,GAAc,KAAtF,iBAEJ,6BACCY,EAAKS,aAGV,yBAAKf,UAAU,kCACVM,EAAKI,MACN,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAAUC,MAAOR,EAAKG,GAAIR,QAAS,kBAAMP,EAAcY,EAAKG,MAA3F,qBAIZ,4BAAKH,EAAKU,UAAUC,KAApB,KAA4BX,EAAKU,UAAUE,MAC3C,4BAAKZ,EAAKa,QAAQF,KAAlB,KAA0BX,EAAKa,QAAQD,MACvC,4BACI,kBAACP,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKC,MAAOR,EAAKG,GAAIR,QAASV,EAAM6B,qBAAnE,oBArChB,+BAmDR9B,EAAY+B,aAAe,CACvB1B,MAAO,I,mJC/CL2B,EAAc,WAAO,IAAD,EACY9B,oBAAS,GADrB,mBACf+B,EADe,KACJC,EADI,OAEYhC,oBAAS,GAFrB,mBAEfwB,EAFe,KAEJS,EAFI,OAGYjC,oBAAS,GAHrB,mBAGf2B,EAHe,KAGJO,EAHI,OAIYlC,oBAAS,GAJrB,mBAIfmC,EAJe,KAIJC,EAJI,OAKYpC,oBAAS,GALrB,mBAKfqC,EALe,KAKJC,EALI,KAwEhBC,EAAY,SAACC,EAAKC,EAAQC,GAC5B,IAAMC,EAASC,YAAaJ,EAAKC,EAAQ,IAAII,KAAQ,CAAEH,WACvD,GAAII,YAAUC,OAAOJ,GACjB,OAAOA,GAKTK,EAAa,SAACvB,EAAMgB,EAAQC,GAC9B,OAAOO,YAAcxB,EAAMgB,EAAQC,IAyBvC,OAAOX,EACH,kBAAC,IAAD,CAAUmB,GAAG,MAEb,kBAACC,EAAA,EAAD,CAAMC,SAnGW,SAAAC,GACjB,IAAMC,EAAOD,EAAME,cAGnB,GAAG/B,GAAaW,EAAW,CACvB,IAAMqB,EAAmBhC,EAAUiC,SAC/BtB,EAAUuB,WACVvB,EAAUwB,aACVxB,EAAUyB,mBAEd3B,EAAcuB,GAEf7B,GAAWU,GACVH,EAAYP,EAAQ8B,SAChBpB,EAAQqB,WACRrB,EAAQsB,aACRtB,EAAQuB,sBAKa,IAAzBN,EAAKO,iBACFrC,GACAG,GACEH,EAAYG,KAEjB0B,EAAMS,iBACNT,EAAMU,mBAKV,IAAIC,EAAU,CACV/C,GAAagD,IAAQC,WACrBhD,MAAaoC,EAAKa,SAASjD,MAAMI,MACjCC,YAAa+B,EAAKa,SAAS5C,YAAYD,MACvCE,UAAa,CACTC,KAAMwB,YAAczB,EAzCZ,aAEL,MAwCHE,KAAMuB,YAAczB,EAzCZ,QACL,OA0CPG,QAAW,CACPF,KAAMwB,YAActB,EA7CZ,aAEL,MA4CHD,KAAMuB,YAAczB,EA7CZ,QACL,QAiDX,GAAyC,OAArC4C,aAAaC,QAAQ,YAAsB,CAE3CD,aAAaE,QAAQ,WAAYC,KAAKC,UADrB,KAKrB,IAAMC,EAAcL,aAAaC,QAAQ,YACrCK,EAAWH,KAAKI,MAAOF,GAC3BC,EAASE,KAAMZ,GACfI,aAAaE,QAAQ,WAAYC,KAAKC,UAAUE,IAGhD1C,GAAa,IAwCiB6C,aAAa,OACvC,kBAAC1B,EAAA,EAAK2B,MAAN,CAAYC,UAAU,SAClB,kBAAC5B,EAAA,EAAK6B,MAAN,cACA,kBAAC7B,EAAA,EAAK8B,QAAN,CACIC,UAAQ,EACRC,UAAU,IACVC,UAAU,MACVC,KAAK,OACLC,YAAY,WAGpB,kBAACnC,EAAA,EAAK2B,MAAN,CAAYC,UAAU,eAClB,kBAAC5B,EAAA,EAAK6B,MAAN,oBACA,kBAAC7B,EAAA,EAAK8B,QAAN,CACIC,UAAQ,EACRC,UAAU,KACVI,GAAG,WACHC,KAAK,IACLF,YAAY,iBAGpB,kBAACnC,EAAA,EAAK2B,MAAN,KACI,kBAAC3B,EAAA,EAAK6B,MAAN,8BACA,kBAACS,EAAA,EAAD,KACI,kBAAC,IAAD,CACIzC,WAAYA,EACZP,OAjIA,aAkIA6C,YAAY,oBACZI,YArDS,SAACC,EAAD,GAAkC,IAA1BC,EAAyB,EAAzBA,SAAyB,EAAfC,UAKvC5D,GADA2D,GAIUD,IA8CEpD,UAAWA,EACXuD,eAAgB,CACZpD,OApIT,KAqISqD,YAAaC,OAGrB,kBAAC,IAAD,CACIC,YAAY,EACZC,YAAY,EACZC,SAAU,SAAC7E,GAAD,OAAWc,EAAa,IAAIS,KAAKvB,KAC3Cd,UAAU,uBACV8E,YAAY,yBAEd9D,GAAcW,EAAgH,KAApG,kBAACiE,EAAA,EAAD,CAAOhF,QAAQ,UAAUZ,UAAU,4BAAnC,qDAGpC,kBAAC2C,EAAA,EAAK2B,MAAN,KACI,kBAAC3B,EAAA,EAAK6B,MAAN,8BACA,kBAACS,EAAA,EAAD,KACI,kBAAC,IAAD,CACIzC,WAAYA,EACZP,OAzJA,aA0JA6C,YAAY,oBACZI,YAlEO,SAACC,EAAD,EAA8BU,GAAoB,IAA1CT,EAAyC,EAAzCA,SAAyC,EAA/BC,UAKrC3D,GADA0D,GAIQD,IA2DIpD,UAAWA,EACXuD,eAAgB,CACZpD,OA5JT,KA6JSqD,YAAaC,OAGrB,kBAAC,IAAD,CACIC,YAAY,EACZC,YAAY,EACZC,SAAU,SAAC7E,GAAD,OAAWgB,EAAW,IAAIO,KAAKvB,KACzCd,UAAU,uBACV8E,YAAY,yBAEd3D,GAAYU,EAA8G,KAApG,kBAAC+D,EAAA,EAAD,CAAOhF,QAAQ,UAAUZ,UAAU,4BAAnC,qDAG/BgB,GAAaG,EAAU,kBAACyE,EAAA,EAAD,CAAOhF,QAAQ,UAAUZ,UAAU,OAAnC,+DAAgG,KACxH,kBAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUiE,KAAK,UAA/B,WC7LNiB,EAAgB,SAACvG,GACnB,OACI,yBAAKS,UAAU,uBACX,mDACA,kBAAC2C,EAAA,EAAD,CAAMgD,SAAUpG,EAAMwG,kBAAmBnD,SAAUrD,EAAMwG,kBAAmB/F,UAAU,uBAClF,kBAAC2C,EAAA,EAAK2B,MAAN,CAAYtE,UAAU,yCAClB,kBAACiF,EAAA,EAAD,KACI,kBAACA,EAAA,EAAWe,QAAZ,KACI,kBAACf,EAAA,EAAWgB,KAAZ,CAAiBxF,GAAG,qBAApB,OAEJ,kBAACkC,EAAA,EAAK8B,QAAN,CAAcI,KAAK,OAAOqB,KAAK,iBAAiBC,aAAa,iBAGrE,kBAACxD,EAAA,EAAK2B,MAAN,CAAYtE,UAAU,yCAClB,kBAACiF,EAAA,EAAD,KACI,kBAACA,EAAA,EAAWe,QAAZ,KACI,kBAACf,EAAA,EAAWgB,KAAZ,CAAiBxF,GAAG,qBAApB,OAEJ,kBAACkC,EAAA,EAAK8B,QAAN,CAAcI,KAAK,OAAOqB,KAAK,mBAGvC,kBAACvF,EAAA,EAAD,CAAQC,QAAQ,UAAUZ,UAAU,OAAOC,QAASV,EAAM6G,qBAA1D,uB,QCtBVC,EAAgB,SAAC9G,GAAW,IAAD,EACWC,mBAAS,WADpB,mBACtB8G,EADsB,KACRC,EADQ,KAE7B,OACI,yBAAKvG,UAAU,kBACX,4CACA,kBAACwG,EAAA,EAAD,CAAUxG,UAAU,sBAAsByG,SAAUlH,EAAMW,cACtD,kBAACsG,EAAA,EAASE,OAAV,KAAkBJ,GAClB,kBAACE,EAAA,EAASG,KAAV,KACI,kBAACH,EAAA,EAASI,KAAV,CAAe3G,QAAS,SAAC4G,GAAD,OAAMN,EAAgBM,EAAEC,OAAOC,YAAYC,SAAS,aAA5E,kBACA,kBAACR,EAAA,EAASI,KAAV,CAAe3G,QAAS,SAAC4G,GAAD,OAAMN,EAAgBM,EAAEC,OAAOC,YAAYC,SAAS,cAA5E,kBACA,kBAACR,EAAA,EAASI,KAAV,CAAe3G,QAAS,SAAC4G,GAAD,OAAMN,EAAgBM,EAAEC,OAAOC,YAAYC,SAAS,iBAA5E,mBACA,kBAACR,EAAA,EAASI,KAAV,CAAe3G,QAAS,SAAC4G,GAAD,OAAMN,EAAgBM,EAAEC,OAAOC,YAAYC,SAAS,kBAA5E,mBACA,kBAACR,EAAA,EAASI,KAAV,CAAe3G,QAAS,SAAC4G,GAAD,OAAMN,EAAgBM,EAAEC,OAAOC,YAAYC,SAAS,eAA5E,uBACA,kBAACR,EAAA,EAASI,KAAV,CAAe3G,QAAS,SAAC4G,GAAD,OAAMN,EAAgBM,EAAEC,OAAOC,YAAYC,SAAS,gBAA5E,2BCddC,EAAU,kBACZ,yBAAKjH,UAAU,WAAf,e,2CCSgBkH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OACL,kBAAC,IAAD,KACI,mBCRO,SAACjI,GACZ,OACI,gCACI,kBAACkI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAK/G,QAAQ,QAAQgH,GAAG,SACnC,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAKvI,EAAMmB,OAC9B,kBAACgH,EAAA,EAAOhB,OAAR,CAAeqB,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBvH,GAAG,mBAAmBT,UAAU,uBAC7C,kBAACiI,EAAA,EAAD,KACI,kBAAC,IAAD,CAASjI,UAAU,MAAM0C,GAAE,UAAKwF,YAAL,MAA3B,sBACA,kBAAC,IAAD,CAASlI,UAAU,kBAAkB0C,GAAE,UAAKwF,YAAL,iBAAvC,0BDFpB,CAAQxH,MAAM,4BACd,kBAAC+G,EAAA,EAAD,CAAWzH,UAAU,WACjB,kBAACmI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAI,UAAKH,YAAL,gBAA2CI,UEfrD,WACrB,OACI,6BACI,wBAAItI,UAAU,mBAAd,oBACA,kBAAC,EAAD,UFYY,kBAAC,IAAD,CAAOqI,KAAI,UAAKH,YAAL,KAAgCI,UGhB7C,WAAO,IAAD,EACE9I,oBAAS,GADX,mBACjB+I,EADiB,KACVC,EADU,OAEQhJ,mBAAS,IAFjB,mBAEjB0E,EAFiB,KAEPuE,EAFO,KAIlBC,EAAiB,WACnB,GAAyC,OAArC9E,aAAaC,QAAQ,YAAsB,CAC3C,IAAI8E,EAAa,GACjBC,MAAM,yCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFA,EAAKC,SAAQ,SAAS3I,GAClB,IAAM4I,EAAa,CACfzI,GAAUH,EAAKG,GACfC,MAAUJ,EAAKI,MACfK,YAAaT,EAAKS,YAClBC,UAAY,CACRC,KAAMX,EAAKU,UAAUC,KACrBC,KAAMZ,EAAKU,UAAUE,MAEzBC,QAAU,CACNF,KAAMX,EAAKa,QAAQF,KACnBC,KAAMZ,EAAKa,QAAQD,OAG3ByH,EAAWvE,KAAK8E,MAEpBtF,aAAaE,QAAQ,WAAYC,KAAKC,UAAU2E,OAI5D,IAAM1E,EAAcL,aAAaC,QAAQ,YACzC,OAAOE,KAAKI,MAAOF,IAgCjBkF,EAAoB,SAACC,EAAKC,GAC5B,IAAKA,EACD,OAAOD,EAIX,IAFA,IAAU7J,EAAQ8J,EAAWC,MAAM,KAE1BC,EAAI,EAAGC,EAAOjK,EAAMkK,OAAS,EAAGF,EAAIC,EAAMD,IAAK,CAGpD,IAAIG,EAAYN,EAFT7J,EAAMgK,IAGb,QAAkBI,IAAdD,EAGA,MAFAN,EAAMM,EAKd,OAAON,EAAI7J,EAAMgK,KAGfK,EAAS,SAACC,EAAKC,GAMjB,OALe,YAAID,GAAKE,MAAK,SAACC,EAAIC,GAC9B,IAAMC,EAAIf,EAAkBa,EAAIF,GAC1BK,EAAIhB,EAAkBc,EAAIH,GAChC,OAAOI,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,MAKlCC,EAAW,SAACvF,GACd,IAAIwF,EAAS,GACb,OAAQxF,GACJ,IAAK,YACDwF,EAAST,EAAO1F,EAAU,SAC1B,MACJ,IAAK,aACDmG,EAAST,EAAO1F,EAAU,SAASoG,UACnC,MACJ,IAAK,gBACDD,EAAST,EAAO1F,EAAU,kBAC1B,MACJ,IAAK,iBACDmG,EAAST,EAAO1F,EAAU,kBAAkBoG,UAC5C,MACJ,IAAK,cACDD,EAAST,EAAO1F,EAAU,gBAC1B,MACJ,IAAK,eACDmG,EAAST,EAAO1F,EAAU,gBAAgBoG,UAC1C,MACJ,QACIC,QAAQC,IAAI,eAAiB3F,EAAO,KAE5C4D,EAAY4B,IAQhB,OALAI,qBAAU,WACNhC,EAAaC,KACbF,GAAS,KACV,IAEID,EACH,yBAAKvI,UAAU,QACX,wBAAIA,UAAU,mBAAd,uBACA,kBAAC,EAAD,CAAeE,aAAckK,IAC7B,kBAAC,EAAD,CAAerE,kBAjFD,SAAAlD,GAClB,IAAMC,EAAOD,EAAME,cACnBF,EAAMS,iBACNT,EAAMU,kBAEN,IAAMvC,EAAc8B,EAAKa,SAAS,kBAAkB7C,MAC9CK,EAAc2B,EAAKa,SAAS,gBAAgB7C,MAC5C4J,EAAchC,IAEjB1H,GACCyH,EAAYiC,EAAYC,QAAO,SAAArK,GAAI,OAAIA,EAAKU,UAAUC,MAAQD,MAE/DG,GACCsH,EAAYiC,EAAYC,QAAO,SAAArK,GAAI,OAAIA,EAAKa,QAAQF,MAAQE,OAoEXiF,oBArFnC,WAClBqC,EAAaC,QAqFT,yBAAK1I,UAAU,QACX,sCACA,kBAAC,EAAD,CAAaL,MAAOuE,EAAU9C,oBAhGpB,SAACyF,GACnB,IAAMpG,EAAKoG,EAAEC,OAAOhG,MACd8J,EAAW1G,EAASyG,QAAO,SAAArK,GAAI,OAAIA,EAAKG,KAAOA,KACrDgI,EAAYmC,GACZhH,aAAaE,QAAQ,WAAYC,KAAKC,UAAU4G,KA4F0B1K,aAAckK,MAKxF,kBAAC,EAAD,cHjHRS,SAASC,eAAe,SDwGlB,kBAAmBC,WACrBA,UAAUC,cAAczC,MAAMM,MAAK,SAAAoC,GACjCA,EAAaC,kB","file":"static/js/main.0d6e89fa.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table, Button } from 'react-bootstrap';\r\n\r\n\r\nconst MeetingList = (props) => {\r\n    const [toggledRow, setToggledRow] = useState(false);\r\n    \r\n    return (!props.items) ? (\r\n        <div></div>\r\n    ) : (\r\n        <Table striped bordered hover className=\"MeetingList\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th onClick={() => props.handleSortBy('title-asc')} style={{width:'60%'}}>Tytuł</th>\r\n                    <th onClick={() => props.handleSortBy('startDate-asc')} style={{width:'15%'}}>Start</th>\r\n                    <th onClick={() => props.handleSortBy('endDate-asc')} style={{width:'15%'}}>Koniec</th>\r\n                    <th>Akcja</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {props.items.map( (item, index) => {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <td>{index+1}</td>\r\n                    <td>\r\n                        {toggledRow === item.id ? (\r\n                            <div>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    {item.title}\r\n                                    <Button variant=\"primary\" size=\"sm ml-2\" value={item.id} onClick={() => setToggledRow(false)}>Schowaj opis</Button>\r\n                                </div>\r\n                                <hr />\r\n                                {item.description}\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                {item.title}\r\n                                <Button variant=\"primary\" size=\"sm ml-2\" value={item.id} onClick={() => setToggledRow(item.id)}>Pokaż Opis</Button>\r\n                            </div>\r\n                        )}\r\n                    </td>\r\n                    <td>{item.startDate.date}, {item.startDate.time}</td>\r\n                    <td>{item.endDate.date}, {item.endDate.time}</td>\r\n                    <td>\r\n                        <Button variant=\"primary\" size=\"sm\" value={item.id} onClick={props.handleDeleteMeeting}>Usuń</Button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n            })}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nMeetingList.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n};\r\n\r\nMeetingList.defaultProps = {\r\n    items: [],\r\n};\r\n\r\nexport {MeetingList};","import React, {useState} from 'react';\r\nimport { Form, InputGroup, Button, Alert } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TimePicker from 'rc-time-picker';\r\nimport 'rc-time-picker/assets/index.css';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport MomentLocaleUtils from 'react-day-picker/moment';\r\nimport shortid from 'shortid';\r\nimport 'moment/locale/pl';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport dateFnsFormat from 'date-fns/format';\r\n\r\nconst MeetingForm = () => {\r\n    const [validated, setValidated] = useState(false);\r\n    const [startDate, setStartDate] = useState(false);\r\n    const [endDate,   setEndDate]   = useState(false);\r\n    const [startTime, setStartTime] = useState(false);\r\n    const [endTime,   setEndTime]   = useState(false);\r\n    const DATE_FORMAT = 'yyyy-MM-dd';\r\n    const TIME_FORMAT = 'HH:mm';\r\n    const LOCALE = 'pl';\r\n\r\n    const handleSubmit = event => {\r\n        const form = event.currentTarget;\r\n\r\n        // Add time to date\r\n        if(startDate && startTime) {\r\n            const newStartDateTime = startDate.setHours( \r\n                startTime.getHours(),\r\n                startTime.getMinutes(),\r\n                startTime.getMilliseconds()\r\n                );\r\n            setStartDate( newStartDateTime );\r\n        }\r\n        if(endDate && endTime) {\r\n            setEndDate( endDate.setHours( \r\n                endTime.getHours(),\r\n                endTime.getMinutes(),\r\n                endTime.getMilliseconds()\r\n                ));\r\n        }\r\n\r\n        \r\n        if (form.checkValidity() === false\r\n            || startDate\r\n            || endDate\r\n            || ( startDate < endDate ) ) {\r\n            \r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        // Create Obj Meetng\r\n\r\n        let meeting = {\r\n            id:          shortid.generate(),\r\n            title:       form.elements.title.value,\r\n            description: form.elements.description.value,\r\n            startDate:   {\r\n                date: dateFnsFormat(startDate, DATE_FORMAT, LOCALE),\r\n                time: dateFnsFormat(startDate, TIME_FORMAT, LOCALE),\r\n            },\r\n            endDate:   {\r\n                date: dateFnsFormat(endDate, DATE_FORMAT, LOCALE),\r\n                time: dateFnsFormat(startDate, TIME_FORMAT, LOCALE),\r\n            }\r\n        }\r\n        \r\n        // Check if localstorage empty\r\n        if (localStorage.getItem(\"meetings\") === null) {\r\n            const meetings = [];\r\n            localStorage.setItem(\"meetings\", JSON.stringify(meetings));\r\n        }\r\n        \r\n        // Save data do localstorage\r\n        const meetings_LS = localStorage.getItem(\"meetings\");\r\n        let meetings = JSON.parse( meetings_LS );\r\n        meetings.push( meeting );\r\n        localStorage.setItem(\"meetings\", JSON.stringify(meetings));\r\n\r\n        // redirect\r\n        setValidated(true);\r\n    };\r\n\r\n    const parseDate = (str, format, locale) => {\r\n        const parsed = dateFnsParse(str, format, new Date(), { locale });\r\n        if (DateUtils.isDate(parsed)) {\r\n            return parsed;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    const formatDate = (date, format, locale) => {\r\n        return dateFnsFormat(date, format, locale );\r\n    }\r\n\r\n    const handleStartDateClick = (day, { selected, disabled }) => {\r\n        if (disabled) {\r\n            return;\r\n        }\r\n        if (selected) {\r\n            setStartDate( false );\r\n            return;\r\n        }\r\n        setStartDate( day );\r\n    };\r\n\r\n    const handleEndDateClick = (day, { selected, disabled }, dayPickerInput) => {\r\n        if (disabled) {\r\n            return;\r\n        }\r\n        if (selected) {\r\n            setEndDate( false );\r\n            return;\r\n        }\r\n        setEndDate( day );\r\n    };\r\n\r\n    return validated ? (\r\n        <Redirect to='/' />\r\n    ) : (\r\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Form.Group controlId=\"title\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control \r\n                    required\r\n                    minLength=\"5\"\r\n                    maxLength=\"120\"\r\n                    type=\"text\" \r\n                    placeholder=\"Title\" \r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control \r\n                    required\r\n                    minLength=\"10\"\r\n                    as=\"textarea\"\r\n                    rows=\"3\" \r\n                    placeholder=\"Description\" \r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Data rozpoczęcia</Form.Label>\r\n                <InputGroup>\r\n                    <DayPickerInput\r\n                        formatDate={formatDate}\r\n                        format={DATE_FORMAT}\r\n                        placeholder='Wybierz datę'\r\n                        onDayChange={handleStartDateClick}\r\n                        parseDate={parseDate}\r\n                        dayPickerProps={{\r\n                            locale: LOCALE,\r\n                            localeUtils: MomentLocaleUtils,\r\n                        }}\r\n                    />\r\n                    <TimePicker \r\n                        allowEmpty={false} \r\n                        showSecond={false} \r\n                        onChange={(value) => setStartTime(new Date(value))}\r\n                        className=\"ml-sm-2 mt-2 mt-sm-0\"\r\n                        placeholder='Wybierz godzinę'\r\n                        />\r\n                    {!startDate || !startTime ? <Alert variant=\"warning\" className=\"ml-md-2 mt-2 mt-md-0 p-2\">Proszę podać datę i godzinę</Alert> : null }\r\n                </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Data zakończenia</Form.Label>\r\n                <InputGroup>\r\n                    <DayPickerInput\r\n                        formatDate={formatDate}\r\n                        format={DATE_FORMAT}\r\n                        placeholder='Wybierz datę'\r\n                        onDayChange={handleEndDateClick}\r\n                        parseDate={parseDate}\r\n                        dayPickerProps={{\r\n                            locale: LOCALE,\r\n                            localeUtils: MomentLocaleUtils,\r\n                        }}\r\n                    />\r\n                    <TimePicker \r\n                        allowEmpty={false} \r\n                        showSecond={false} \r\n                        onChange={(value) => setEndTime(new Date(value))}\r\n                        className=\"ml-sm-2 mt-2 mt-sm-0\"\r\n                        placeholder='Wybierz godzinę'\r\n                        />\r\n                    {!endDate || !endTime ? <Alert variant=\"warning\" className=\"ml-md-2 mt-2 mt-md-0 p-2\">Proszę podać datę i godzinę</Alert> : null }\r\n                </InputGroup>\r\n            </Form.Group>\r\n            {startDate >= endDate ? <Alert variant=\"warning\" className=\"p-2\">Data zakończenia jest przed datą rozpoczęcia</Alert> : null}\r\n            <Button variant=\"primary\" type=\"submit\">Dodaj</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport {MeetingForm};","import React from 'react';\r\nimport { Button, Form, InputGroup } from 'react-bootstrap';\r\n\r\n\r\nconst MeetingFilter = (props) => {\r\n    return (\r\n        <div className=\"d-inline-block ml-2\">\r\n            <span>Filtruj po dacie:</span>\r\n            <Form onChange={props.handleFilterDates} onSubmit={props.handleFilterDates} className=\"d-inline-block ml-2\">\r\n                <Form.Group className=\"d-inline-block ml-2 mb-0 align-bottom\">\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">Od</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"date\" name=\"startDate.date\" defaultValue=\"2019-11-25\"/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group className=\"d-inline-block ml-2 mb-0 align-bottom\">\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">Do</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"date\" name=\"endDate.date\"/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" className=\"ml-2\" onClick={props.handleDisableFilter}>Wyłącz</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {MeetingFilter};","import React, {useState} from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst MeetingSortBy = (props) => {\r\n    const [ddToggleName, setDdToggleName] = useState('Wybierz');\r\n    return (\r\n        <div className=\"d-inline-block\">\r\n            <span>Sortuj po:</span>\r\n            <Dropdown className=\"d-inline-block ml-2\" onSelect={props.handleSortBy}>\r\n                <Dropdown.Toggle>{ddToggleName}</Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={(e)=> setDdToggleName(e.target.innerHTML)} eventKey=\"title-asc\">Tytuł A-Z</Dropdown.Item>\r\n                    <Dropdown.Item onClick={(e)=> setDdToggleName(e.target.innerHTML)} eventKey=\"title-desc\">Tytuł Z-A</Dropdown.Item>\r\n                    <Dropdown.Item onClick={(e)=> setDdToggleName(e.target.innerHTML)} eventKey=\"startDate-asc\">Data Startu 0-9</Dropdown.Item>\r\n                    <Dropdown.Item onClick={(e)=> setDdToggleName(e.target.innerHTML)} eventKey=\"startDate-desc\">Data Startu 9-0</Dropdown.Item>\r\n                    <Dropdown.Item onClick={(e)=> setDdToggleName(e.target.innerHTML)} eventKey=\"endDate-asc\">Data Końca 0-9</Dropdown.Item>\r\n                    <Dropdown.Item onClick={(e)=> setDdToggleName(e.target.innerHTML)} eventKey=\"endDate-desc\">Data Końca 9-0</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {MeetingSortBy};","import React from 'react';\r\n\r\nconst Loading = () => (\r\n    <div className=\"Loading\">Loading...</div>\r\n);\r\n\r\nexport {Loading};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Header } from './components';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {HomeContainer as Home, MeetingContainer as Meeting} from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Header title=\"Planowanie spotkań\"/>\n        <Container className=\"Content\">\n            <Row>\n                <Col>\n                    <Switch>\n                        <Route path={`${process.env.PUBLIC_URL}/meeting/add`} component={Meeting}/>\n                        <Route path={`${process.env.PUBLIC_URL}/`} component={Home}/>\n                    </Switch>\n                </Col>\n            </Row>\n        </Container>\n    </BrowserRouter>,\ndocument.getElementById('root')\n);\nserviceWorker.unregister();\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <Container>\r\n                <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n                    <Navbar.Brand href=\"#\">{props.title}</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <NavLink className=\"btn\" to={`${process.env.PUBLIC_URL}/`}>Lista spotkań</NavLink>\r\n                            <NavLink className=\"btn btn-primary\" to={`${process.env.PUBLIC_URL}/meeting/add`}>Dodaj spotkanie</NavLink>\r\n                        </Nav>\r\n                    </Navbar.Collapse>                \r\n                </Navbar>\r\n            </Container>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport {Header};","import React from 'react';\r\nimport { MeetingForm } from 'components';\r\n\r\nconst MeetingContainer = () => {\r\n    return (\r\n        <div>\r\n            <h5 className=\"p-3 text-center\">Dodaj spotkanie:</h5>\r\n            <MeetingForm/>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport {MeetingContainer}; ","import React, {useState, useEffect} from 'react';\r\nimport { MeetingList, MeetingFilter, MeetingSortBy, Loading } from 'components';\r\n\r\nconst HomeContainer = () => {\r\n    const [ready, setReady] = useState(false);\r\n    const [meetings, setMeetings] = useState([]);\r\n\r\n    const getInitialData = () => {\r\n        if (localStorage.getItem(\"meetings\") === null) {\r\n            let meetingArr = []; \r\n            fetch(`https://rkserv.hekko.pl/attendly/get/`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    data.forEach(function(item){\r\n                        const newMeeting = {\r\n                            id:       item.id,\r\n                            title:    item.title,\r\n                            description: item.description,\r\n                            startDate : {\r\n                                date: item.startDate.date,\r\n                                time: item.startDate.time,\r\n                            },\r\n                            endDate : {\r\n                                date: item.endDate.date,\r\n                                time: item.endDate.time,\r\n                            },\r\n                        }\r\n                        meetingArr.push(newMeeting);\r\n                    });\r\n                    localStorage.setItem(\"meetings\", JSON.stringify(meetingArr));\r\n                }); \r\n                \r\n        }\r\n        const meetings_LS = localStorage.getItem(\"meetings\");\r\n        return JSON.parse( meetings_LS )\r\n    }\r\n\r\n    const deleteMeeting = (e) => {\r\n        const id = e.target.value;\r\n        const filtered = meetings.filter(item => item.id !== id);\r\n        setMeetings(filtered);\r\n        localStorage.setItem(\"meetings\", JSON.stringify(filtered));\r\n    }\r\n\r\n    \r\n    const disableFilter = () => {\r\n        setMeetings( getInitialData() );\r\n    }\r\n\r\n    const onFilterDates = event => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        \r\n        const startDate   = form.elements['startDate.date'].value;\r\n        const endDate     = form.elements['endDate.date'].value;\r\n        const initialData = getInitialData();\r\n        \r\n        if(startDate){\r\n            setMeetings(initialData.filter(item => item.startDate.date >= startDate));\r\n        }\r\n        if(endDate){\r\n            setMeetings(initialData.filter(item => item.endDate.date <= endDate));\r\n        }\r\n    }\r\n\r\n    const __getPropByString = (obj, propString) => {\r\n        if (!propString)\r\n            return obj;\r\n    \r\n        var prop, props = propString.split('.');\r\n    \r\n        for (var i = 0, iLen = props.length - 1; i < iLen; i++) {\r\n            prop = props[i];\r\n    \r\n            var candidate = obj[prop];\r\n            if (candidate !== undefined) {\r\n                obj = candidate;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return obj[props[i]];\r\n    }\r\n\r\n    const __sort = (arr, propStr) => {\r\n        const sorted = [...arr].sort((i1, i2) => {\r\n            const a = __getPropByString(i1, propStr);\r\n            const b = __getPropByString(i2, propStr);\r\n            return a > b ? 1 : a < b ? -1 : 0;\r\n        });\r\n        return sorted;\r\n    }\r\n    \r\n    const onSortBy = (type) => {\r\n        let sorted = [];\r\n        switch (type) {\r\n            case 'title-asc':\r\n                sorted = __sort(meetings, 'title');\r\n                break;\r\n            case 'title-desc':\r\n                sorted = __sort(meetings, 'title').reverse();\r\n                break;\r\n            case 'startDate-asc':\r\n                sorted = __sort(meetings, 'startDate.date');\r\n                break;\r\n            case 'startDate-desc':\r\n                sorted = __sort(meetings, 'startDate.date').reverse();\r\n                break;\r\n            case 'endDate-asc':\r\n                sorted = __sort(meetings, 'endDate.date');\r\n                break;\r\n            case 'endDate-desc':\r\n                sorted = __sort(meetings, 'endDate.date').reverse();\r\n                break;\r\n            default:\r\n                console.log('Type error: ' + type + '.');  \r\n        }\r\n        setMeetings(sorted);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMeetings( getInitialData() );\r\n        setReady(true);\r\n    }, []);\r\n\r\n    return ready ? (\r\n        <div className=\"Home\">\r\n            <h5 className=\"p-3 text-center\">Lista spotkań:</h5>\r\n            <MeetingSortBy handleSortBy={onSortBy}/>\r\n            <MeetingFilter handleFilterDates={onFilterDates} handleDisableFilter={disableFilter} />\r\n            <div className=\"pb-2\">\r\n                <h5>Lista:</h5>\r\n                <MeetingList items={meetings} handleDeleteMeeting={deleteMeeting} handleSortBy={onSortBy}/>\r\n            </div>\r\n        </div>\r\n    )\r\n    : (\r\n        <Loading />\r\n    )\r\n}\r\n\r\nexport {HomeContainer};"],"sourceRoot":""}