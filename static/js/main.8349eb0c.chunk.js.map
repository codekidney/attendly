{"version":3,"sources":["components/meeting/meetingList.component.js","components/meeting/meetingForm.component.js","components/meeting/meetingFilter.component.js","components/loading/loading.component.js","serviceWorker.js","index.js","components/header/header.component.js","routes/meeting/meeting.container.js","routes/home/home.container.js"],"names":["MeetingList","props","Accordion","className","items","map","item","index","Card","key","id","Toggle","as","Header","eventKey","startDate","date","title","Collapse","Body","description","time","endDate","Button","variant","size","value","onClick","handleDeleteMeeting","defaultProps","MeetingForm","useState","valid","setValid","to","Form","onSubmit","event","form","currentTarget","preventDefault","stopPropagation","meeting","Math","round","Date","getTime","random","elements","localStorage","getItem","setItem","JSON","stringify","meetings_LS","meetings","parse","push","Group","controlId","Label","Control","type","placeholder","rows","InputGroup","FormControl","MeetingFilter","onChange","handleFilterDates","Row","Col","sm","Prepend","Text","name","defaultValue","handleDisableFilter","Loading","Boolean","window","location","hostname","match","ReactDOM","render","Container","Navbar","expand","bg","Brand","href","aria-controls","Nav","path","component","ready","setReady","setMeetings","getInitialData","meetingArr","fetch","then","response","json","data","forEach","newMeeting","useEffect","sorted","sort","i1","i2","a","b","initialData","filter","e","parseInt","target","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.8349eb0c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\n\r\n\r\nconst MeetingList = (props) => {\r\n    \r\n    return (\r\n        <Accordion className=\"MeetingList\">\r\n            {props.items.map( (item, index) => {\r\n            return (\r\n                <Card className=\"Meeting\" key={item.id}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={index}>{item.startDate.date} | {item.title}</Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={index}>\r\n                        <Card.Body>\r\n                            <div className=\"Meeting__Description pb-3\">Opis: {item.description}</div>\r\n                            <div className=\"Meeting__StartDate\">Rozpocznie się: {item.startDate.date} o godz.: {item.startDate.time}</div>\r\n                            <div className=\"Meeting__EndDate pb-3\">Zakończy się: {item.endDate.date} o godz.: {item.endDate.time}</div>\r\n                            <Button variant=\"primary\" size=\"sm\" value={item.id} onClick={props.handleDeleteMeeting}>Usuń wydarzenie</Button>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            )\r\n            })}\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nMeetingList.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n};\r\n\r\nMeetingList.defaultProps = {\r\n    items: [],\r\n};\r\n\r\nexport {MeetingList};","import React, {useState} from 'react';\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst uniqId = () => {\r\n    return Math.round(new Date().getTime() + (Math.random() * 100));\r\n}\r\n\r\nconst MeetingForm = () => {\r\n    const [valid, setValid] = useState(false);\r\n\r\n    const handleSubmit = event => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // format data\r\n        let meeting = {\r\n            id:          uniqId(),\r\n            title:       form.elements.title.value,\r\n            description: form.elements.description.value,\r\n            startDate:   {\r\n                date: form.elements['startDate.date'].value,\r\n                time: form.elements['startDate.time'].value,\r\n            },\r\n            endDate:   {\r\n                date: form.elements['endDate.date'].value,\r\n                time: form.elements['endDate.time'].value,\r\n            }\r\n        }\r\n\r\n        // Check if localstorage empty\r\n        if (localStorage.getItem(\"meetings\") === null) {\r\n            const meetings = [];\r\n            localStorage.setItem(\"meetings\", JSON.stringify(meetings));\r\n        }\r\n        \r\n        // Save data do localstorage\r\n        const meetings_LS = localStorage.getItem(\"meetings\");\r\n        let meetings = JSON.parse( meetings_LS );\r\n        meetings.push( meeting );\r\n        localStorage.setItem(\"meetings\", JSON.stringify(meetings));\r\n\r\n        // redirect\r\n        setValid(true);\r\n    };\r\n\r\n    return valid ? (\r\n        <Redirect to='/' />\r\n    ) : (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"title\">\r\n                <Form.Label>Tytuł</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Tytuł\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n                <Form.Label>Opis</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Opis\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Data i godzina od</Form.Label>\r\n                <InputGroup>\r\n                    <FormControl id=\"startDate.date\" type=\"date\" />\r\n                    <FormControl id=\"startDate.time\" type=\"time\" />\r\n                </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Data i godzina do</Form.Label>\r\n                <InputGroup>\r\n                    <FormControl id=\"endDate.date\" type=\"date\" />\r\n                    <FormControl id=\"endDate.time\" type=\"time\" />\r\n                </InputGroup>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Dodaj</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport {MeetingForm};","import React from 'react';\r\nimport { Button, Form, Col, InputGroup } from 'react-bootstrap';\r\n\r\n\r\nconst MeetingFilter = (props) => {\r\n    return (\r\n        <Form onChange={props.handleFilterDates} onSubmit={props.handleFilterDates}>\r\n            <Form.Row>\r\n                <Form.Group as={Col} sm=\"6\">\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">Od</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"date\" name=\"startDate.date\" defaultValue=\"2019-11-25\"/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group as={Col} sm=\"6\">\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">Do</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"date\" name=\"endDate.date\"/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Col sm={3}>\r\n                    <Button variant=\"primary\" type=\"submit\" >Zastosuj</Button>\r\n                </Col>\r\n                <Col sm={3}>\r\n                    <Button variant=\"primary\" onClick={props.handleDisableFilter}>Wyłącz</Button>\r\n                </Col>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport {MeetingFilter};","import React from 'react';\r\n\r\nconst Loading = () => (\r\n    <div className=\"Loading\">Loading...</div>\r\n);\r\n\r\nexport {Loading};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Header } from './components';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {HomeContainer as Home, MeetingContainer as Meeting} from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Header title=\"Planowanie spotkań\"/>\n        <Container className=\"Content\">\n            <Row>\n                <Col>\n                    <Switch>\n                        <Route path=\"/meeting/add\" component={Meeting}/>\n                        <Route component={Home}/>\n                    </Switch>\n                </Col>\n            </Row>\n        </Container>\n    </BrowserRouter>,\ndocument.getElementById('root')\n);\nserviceWorker.unregister();\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst Header = (props) => (\r\n    <header>\r\n        <Container>\r\n            <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n                <Navbar.Brand href=\"#\">{props.title}</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink to=\"/\">Home</NavLink>\r\n                        <NavLink to=\"/meeting/add\">Dodaj Spotkanie</NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>                \r\n            </Navbar>\r\n        </Container>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport {Header};","import React from 'react';\r\nimport { MeetingForm } from 'components';\r\n\r\nconst MeetingContainer = () => {\r\n    return (\r\n        <div>\r\n            <MeetingForm/>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport {MeetingContainer}; ","import React, {useState, useEffect} from 'react';\r\nimport { MeetingList, MeetingFilter, Loading } from 'components';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst HomeContainer = () => {\r\n    const [ready, setReady] = useState(false);\r\n    const [meetings, setMeetings] = useState([]);\r\n\r\n    const getInitialData = () => {\r\n        if (localStorage.getItem(\"meetings\") === null) {\r\n            let meetingArr = []; \r\n            fetch(`http://rkserv.hekko.pl/attendly/get/`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    data.forEach(function(item){\r\n                        const newMeeting = {\r\n                            id:       item.id,\r\n                            title:    item.title,\r\n                            description: item.description,\r\n                            startDate : {\r\n                                date: item.startDate.date,\r\n                                time: item.startDate.time,\r\n                            },\r\n                            endDate : {\r\n                                date: item.endDate.date,\r\n                                time: item.endDate.time,\r\n                            },\r\n                        }\r\n                        meetingArr.push(newMeeting);\r\n                    });\r\n                    localStorage.setItem(\"meetings\", JSON.stringify(meetingArr));\r\n                }); \r\n                \r\n        }\r\n        const meetings_LS = localStorage.getItem(\"meetings\");\r\n        return JSON.parse( meetings_LS )\r\n    }\r\n\r\n    const deleteMeeting = (e) => {\r\n        const id = parseInt(e.target.value);\r\n        setMeetings(meetings.filter(item => item.id !== id));\r\n        localStorage.setItem(\"meetings\", JSON.stringify(meetings));\r\n    }\r\n\r\n    const sortByStartDate = () => {\r\n        const sorted = [...meetings].sort((i1, i2) => {\r\n            const a = i1.startDate.date;\r\n            const b = i2.startDate.date;\r\n            return a > b ? 1 : a < b ? -1 : 0;\r\n        });\r\n        setMeetings(sorted);\r\n    }\r\n\r\n    const disableFilter = () => {\r\n        setMeetings( getInitialData() );\r\n    }\r\n\r\n    const filterDates = event => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const startDate   = form.elements['startDate.date'].value;\r\n        const endDate     = form.elements['endDate.date'].value;\r\n        const initialData = getInitialData();\r\n        \r\n        if(startDate){\r\n            setMeetings(initialData.filter(item => item.startDate.date >= startDate));\r\n        }\r\n        if(endDate){\r\n            setMeetings(initialData.filter(item => item.endDate.date <= endDate));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMeetings( getInitialData() );\r\n        setReady(true);\r\n    }, []);\r\n\r\n    return ready ? (\r\n        <div className=\"Home\">\r\n            <h5 className=\"p-3 text-center\">Lista spotkań:</h5>\r\n            <div className=\"pb-2\">\r\n                <h5>Sortuj po:</h5>\r\n                <Button variant=\"primary\" size=\"sm\" onClick={sortByStartDate}>Sortowanie po dacie</Button>\r\n            </div>\r\n            <div className=\"pb-2\">\r\n                <h5>Filtruj po dacie:</h5>\r\n                <MeetingFilter handleFilterDates={filterDates} handleDisableFilter={disableFilter} />\r\n            </div>\r\n            <div className=\"pb-2\">\r\n                <h5>Lista:</h5>\r\n                <MeetingList items={meetings} handleDeleteMeeting={deleteMeeting}/>\r\n            </div>\r\n            <div className=\"pb-2\">\r\n                <h5>Akcje:</h5>\r\n                <Button variant=\"primary\" href=\"/meeting/add\">Dodaj wydarzenie</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n    : (\r\n        <Loading />\r\n    )\r\n}\r\n\r\nexport {HomeContainer};"],"sourceRoot":""}