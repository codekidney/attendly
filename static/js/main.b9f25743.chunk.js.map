{"version":3,"sources":["components/meeting/meetingList.component.js","components/meeting/meetingForm.component.js","components/meeting/meetingFilter.component.js","components/loading/loading.component.js","serviceWorker.js","index.js","components/header/header.component.js","routes/meeting/meeting.container.js","routes/home/home.container.js"],"names":["MeetingList","props","items","Accordion","className","map","item","index","Card","key","id","Toggle","as","Header","eventKey","startDate","date","title","Collapse","Body","description","time","endDate","Button","variant","size","value","onClick","handleDeleteMeeting","defaultProps","MeetingForm","useState","validated","setValidated","setStartDate","setEndDate","startTime","setStartTime","endTime","setEndTime","parseDate","str","format","locale","parsed","dateFnsParse","Date","DateUtils","isDate","formatDate","dateFnsFormat","to","Form","onSubmit","event","form","currentTarget","newStartDateTime","setHours","getHours","getMinutes","getMilliseconds","checkValidity","preventDefault","stopPropagation","meeting","Math","round","getTime","random","elements","localStorage","getItem","setItem","JSON","stringify","meetings_LS","meetings","parse","push","autoComplete","Group","controlId","Label","Control","required","minLength","maxLength","type","placeholder","rows","InputGroup","onDayChange","day","selected","disabled","dayPickerProps","localeUtils","MomentLocaleUtils","allowEmpty","showSecond","onChange","Alert","dayPickerInput","MeetingFilter","handleFilterDates","Row","Col","sm","Prepend","Text","name","defaultValue","handleDisableFilter","Loading","Boolean","window","location","hostname","match","ReactDOM","render","Container","Navbar","expand","bg","Brand","href","aria-controls","Nav","path","component","ready","setReady","setMeetings","getInitialData","meetingArr","fetch","then","response","json","data","forEach","newMeeting","useEffect","sorted","sort","i1","i2","a","b","initialData","filter","e","parseInt","target","filtered","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.b9f25743.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\n\r\n\r\nconst MeetingList = (props) => {\r\n    \r\n    return (!props.items) ? (\r\n        <div></div>\r\n    ) : (\r\n        <Accordion className=\"MeetingList\">\r\n            {props.items.map( (item, index) => {\r\n            return (\r\n                <Card className=\"Meeting\" key={item.id}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={index}>{item.startDate.date} | {item.title}</Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={index}>\r\n                        <Card.Body>\r\n                            <div className=\"Meeting__Description pb-3\">Opis: {item.description}</div>\r\n                            <div className=\"Meeting__StartDate\">Rozpocznie się: {item.startDate.date} o godz.: {item.startDate.time}</div>\r\n                            <div className=\"Meeting__EndDate pb-3\">Zakończy się: {item.endDate.date} o godz.: {item.endDate.time}</div>\r\n                            <Button variant=\"primary\" size=\"sm\" value={item.id} onClick={props.handleDeleteMeeting}>Usuń wydarzenie</Button>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            )\r\n            })}\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nMeetingList.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n};\r\n\r\nMeetingList.defaultProps = {\r\n    items: [],\r\n};\r\n\r\nexport {MeetingList};","import React, {useState} from 'react';\r\nimport { Form, InputGroup, Button, Alert } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TimePicker from 'rc-time-picker';\r\nimport 'rc-time-picker/assets/index.css';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport MomentLocaleUtils from 'react-day-picker/moment';\r\n\r\nimport 'moment/locale/pl';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport dateFnsFormat from 'date-fns/format';\r\n\r\nconst uniqId = () => {\r\n    return Math.round(new Date().getTime() + (Math.random() * 100));\r\n}\r\n\r\nconst MeetingForm = () => {\r\n    const [validated, setValidated] = useState(false);\r\n    const [startDate, setStartDate] = useState(false);\r\n    const [endDate,   setEndDate]   = useState(false);\r\n    const [startTime, setStartTime] = useState(false);\r\n    const [endTime,   setEndTime]   = useState(false);\r\n    const DATE_FORMAT = 'yyyy-MM-dd';\r\n    const TIME_FORMAT = 'HH:mm';\r\n    const LOCALE = 'pl';\r\n\r\n    const handleSubmit = event => {\r\n        const form = event.currentTarget;\r\n\r\n        // Add time to date\r\n        if(startDate && startTime) {\r\n            const newStartDateTime = startDate.setHours( \r\n                startTime.getHours(),\r\n                startTime.getMinutes(),\r\n                startTime.getMilliseconds()\r\n                );\r\n            setStartDate( newStartDateTime );\r\n        }\r\n        if(endDate && endTime) {\r\n            setEndDate( endDate.setHours( \r\n                endTime.getHours(),\r\n                endTime.getMinutes(),\r\n                endTime.getMilliseconds()\r\n                ));\r\n        }\r\n\r\n        \r\n        if (form.checkValidity() === false\r\n            || startDate\r\n            || endDate\r\n            || ( startDate < endDate ) ) {\r\n            \r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        // Create Obj Meetng\r\n\r\n        let meeting = {\r\n            id:          uniqId(),\r\n            title:       form.elements.title.value,\r\n            description: form.elements.description.value,\r\n            startDate:   {\r\n                date: dateFnsFormat(startDate, DATE_FORMAT, LOCALE),\r\n                time: dateFnsFormat(startDate, TIME_FORMAT, LOCALE),\r\n            },\r\n            endDate:   {\r\n                date: dateFnsFormat(endDate, DATE_FORMAT, LOCALE),\r\n                time: dateFnsFormat(startDate, TIME_FORMAT, LOCALE),\r\n            }\r\n        }\r\n        \r\n        // Check if localstorage empty\r\n        if (localStorage.getItem(\"meetings\") === null) {\r\n            const meetings = [];\r\n            localStorage.setItem(\"meetings\", JSON.stringify(meetings));\r\n        }\r\n        \r\n        // Save data do localstorage\r\n        const meetings_LS = localStorage.getItem(\"meetings\");\r\n        let meetings = JSON.parse( meetings_LS );\r\n        meetings.push( meeting );\r\n        localStorage.setItem(\"meetings\", JSON.stringify(meetings));\r\n\r\n        // redirect\r\n        setValidated(true);\r\n    };\r\n\r\n    const parseDate = (str, format, locale) => {\r\n        const parsed = dateFnsParse(str, format, new Date(), { locale });\r\n        if (DateUtils.isDate(parsed)) {\r\n            return parsed;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    const formatDate = (date, format, locale) => {\r\n        return dateFnsFormat(date, format, locale );\r\n    }\r\n\r\n    const handleStartDateClick = (day, { selected, disabled }) => {\r\n        if (disabled) {\r\n            return;\r\n        }\r\n        if (selected) {\r\n            setStartDate( false );\r\n            return;\r\n        }\r\n        setStartDate( day );\r\n    };\r\n\r\n    const handleEndDateClick = (day, { selected, disabled }, dayPickerInput) => {\r\n        if (disabled) {\r\n            return;\r\n        }\r\n        if (selected) {\r\n            setEndDate( false );\r\n            return;\r\n        }\r\n        setEndDate( day );\r\n    };\r\n\r\n    return validated ? (\r\n        <Redirect to='/' />\r\n    ) : (\r\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Form.Group controlId=\"title\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control \r\n                    required\r\n                    minLength=\"5\"\r\n                    maxLength=\"120\"\r\n                    type=\"text\" \r\n                    placeholder=\"Title\" \r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control \r\n                    required\r\n                    minLength=\"10\"\r\n                    as=\"textarea\"\r\n                    rows=\"3\" \r\n                    placeholder=\"Description\" \r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Data rozpoczęcia</Form.Label>\r\n                <InputGroup>\r\n                    <DayPickerInput\r\n                        formatDate={formatDate}\r\n                        format={DATE_FORMAT}\r\n                        placeholder='Wybierz datę'\r\n                        onDayChange={handleStartDateClick}\r\n                        parseDate={parseDate}\r\n                        dayPickerProps={{\r\n                            locale: LOCALE,\r\n                            localeUtils: MomentLocaleUtils,\r\n                        }}\r\n                    />\r\n                    <TimePicker \r\n                        allowEmpty={false} \r\n                        showSecond={false} \r\n                        onChange={(value) => setStartTime(new Date(value))}\r\n                        className=\"ml-sm-2 mt-2 mt-sm-0\"\r\n                        placeholder='Wybierz godzinę'\r\n                        />\r\n                    {!startDate || !startTime ? <Alert variant=\"warning\" className=\"ml-md-2 mt-2 mt-md-0 p-2\">Proszę podać datę i godzinę</Alert> : null }\r\n                </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Data zakończenia</Form.Label>\r\n                <InputGroup>\r\n                    <DayPickerInput\r\n                        formatDate={formatDate}\r\n                        format={DATE_FORMAT}\r\n                        placeholder='Wybierz datę'\r\n                        onDayChange={handleEndDateClick}\r\n                        parseDate={parseDate}\r\n                        dayPickerProps={{\r\n                            locale: LOCALE,\r\n                            localeUtils: MomentLocaleUtils,\r\n                        }}\r\n                    />\r\n                    <TimePicker \r\n                        allowEmpty={false} \r\n                        showSecond={false} \r\n                        onChange={(value) => setEndTime(new Date(value))}\r\n                        className=\"ml-sm-2 mt-2 mt-sm-0\"\r\n                        placeholder='Wybierz godzinę'\r\n                        />\r\n                    {!endDate || !endTime ? <Alert variant=\"warning\" className=\"ml-md-2 mt-2 mt-md-0 p-2\">Proszę podać datę i godzinę</Alert> : null }\r\n                </InputGroup>\r\n            </Form.Group>\r\n            {startDate >= endDate ? <Alert variant=\"warning\" className=\"p-2\">Data zakończenia jest przed datą rozpoczęcia</Alert> : null}\r\n            <Button variant=\"primary\" type=\"submit\">Dodaj</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport {MeetingForm};","import React from 'react';\r\nimport { Button, Form, Col, InputGroup } from 'react-bootstrap';\r\n\r\n\r\nconst MeetingFilter = (props) => {\r\n    return (\r\n        <Form onChange={props.handleFilterDates} onSubmit={props.handleFilterDates}>\r\n            <Form.Row>\r\n                <Form.Group as={Col} sm=\"6\">\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">Od</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"date\" name=\"startDate.date\" defaultValue=\"2019-11-25\"/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group as={Col} sm=\"6\">\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">Do</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"date\" name=\"endDate.date\"/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Col sm={3}>\r\n                    <Button variant=\"primary\" type=\"submit\" >Zastosuj</Button>\r\n                </Col>\r\n                <Col sm={3}>\r\n                    <Button variant=\"primary\" onClick={props.handleDisableFilter}>Wyłącz</Button>\r\n                </Col>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport {MeetingFilter};","import React from 'react';\r\n\r\nconst Loading = () => (\r\n    <div className=\"Loading\">Loading...</div>\r\n);\r\n\r\nexport {Loading};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Header } from './components';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {HomeContainer as Home, MeetingContainer as Meeting} from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Header title=\"Planowanie spotkań\"/>\n        <Container className=\"Content\">\n            <Row>\n                <Col>\n                    <Switch>\n                        <Route path=\"/meeting/add\" component={Meeting}/>\n                        <Route component={Home}/>\n                    </Switch>\n                </Col>\n            </Row>\n        </Container>\n    </BrowserRouter>,\ndocument.getElementById('root')\n);\nserviceWorker.unregister();\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst Header = (props) => (\r\n    <header>\r\n        <Container>\r\n            <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n                <Navbar.Brand href=\"#\">{props.title}</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink to=\"/\">Home</NavLink>\r\n                        <NavLink to=\"/meeting/add\">Dodaj Spotkanie</NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>                \r\n            </Navbar>\r\n        </Container>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport {Header};","import React from 'react';\r\nimport { MeetingForm } from 'components';\r\n\r\nconst MeetingContainer = () => {\r\n    return (\r\n        <div>\r\n            <h5 className=\"p-3 text-center\">Dodaj spotkanie:</h5>\r\n            <MeetingForm/>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport {MeetingContainer}; ","import React, {useState, useEffect} from 'react';\r\nimport { MeetingList, MeetingFilter, Loading } from 'components';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst HomeContainer = () => {\r\n    const [ready, setReady] = useState(false);\r\n    const [meetings, setMeetings] = useState([]);\r\n\r\n    const getInitialData = () => {\r\n        if (localStorage.getItem(\"meetings\") === null) {\r\n            let meetingArr = []; \r\n            fetch(`https://rkserv.hekko.pl/attendly/get/`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    data.forEach(function(item){\r\n                        const newMeeting = {\r\n                            id:       item.id,\r\n                            title:    item.title,\r\n                            description: item.description,\r\n                            startDate : {\r\n                                date: item.startDate.date,\r\n                                time: item.startDate.time,\r\n                            },\r\n                            endDate : {\r\n                                date: item.endDate.date,\r\n                                time: item.endDate.time,\r\n                            },\r\n                        }\r\n                        meetingArr.push(newMeeting);\r\n                    });\r\n                    localStorage.setItem(\"meetings\", JSON.stringify(meetingArr));\r\n                }); \r\n                \r\n        }\r\n        const meetings_LS = localStorage.getItem(\"meetings\");\r\n        return JSON.parse( meetings_LS )\r\n    }\r\n\r\n    const deleteMeeting = (e) => {\r\n        const id = parseInt(e.target.value);\r\n        const filtered = meetings.filter(item => item.id !== id);\r\n        setMeetings(filtered);\r\n        localStorage.setItem(\"meetings\", JSON.stringify(filtered));\r\n    }\r\n\r\n    const sortByStartDate = () => {\r\n        const sorted = [...meetings].sort((i1, i2) => {\r\n            const a = i1.startDate.date;\r\n            const b = i2.startDate.date;\r\n            return a > b ? 1 : a < b ? -1 : 0;\r\n        });\r\n        setMeetings(sorted);\r\n    }\r\n\r\n    const disableFilter = () => {\r\n        setMeetings( getInitialData() );\r\n    }\r\n\r\n    const filterDates = event => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const startDate   = form.elements['startDate.date'].value;\r\n        const endDate     = form.elements['endDate.date'].value;\r\n        const initialData = getInitialData();\r\n        \r\n        if(startDate){\r\n            setMeetings(initialData.filter(item => item.startDate.date >= startDate));\r\n        }\r\n        if(endDate){\r\n            setMeetings(initialData.filter(item => item.endDate.date <= endDate));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMeetings( getInitialData() );\r\n        setReady(true);\r\n    }, []);\r\n\r\n    return ready ? (\r\n        <div className=\"Home\">\r\n            <h5 className=\"p-3 text-center\">Lista spotkań:</h5>\r\n            <div className=\"pb-2\">\r\n                <h5>Sortuj po:</h5>\r\n                <Button variant=\"primary\" size=\"sm\" onClick={sortByStartDate}>Sortowanie po dacie</Button>\r\n            </div>\r\n            <div className=\"pb-2\">\r\n                <h5>Filtruj po dacie:</h5>\r\n                <MeetingFilter handleFilterDates={filterDates} handleDisableFilter={disableFilter} />\r\n            </div>\r\n            <div className=\"pb-2\">\r\n                <h5>Lista:</h5>\r\n                <MeetingList items={meetings} handleDeleteMeeting={deleteMeeting}/>\r\n            </div>\r\n            <div className=\"pb-2\">\r\n                <h5>Akcje:</h5>\r\n                <Button variant=\"primary\" href=\"/meeting/add\">Dodaj wydarzenie</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n    : (\r\n        <Loading />\r\n    )\r\n}\r\n\r\nexport {HomeContainer};"],"sourceRoot":""}